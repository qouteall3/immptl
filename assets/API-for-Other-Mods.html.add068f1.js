import{_ as s,e as n}from"./app.6c6fd354.js";const e={},a=n(`<h1 id="api-for-other-mods" tabindex="-1"><a class="header-anchor" href="#api-for-other-mods" aria-hidden="true">#</a> API for Other Mods</h1><p>The Fabric version of Immersive Portals mod contains some API for other mods to use.</p><h2 id="api-overview" tabindex="-1"><a class="header-anchor" href="#api-overview" aria-hidden="true">#</a> API Overview</h2><p>Immersive Portals mod&#39;s API is now split across 2 mods, one is Immersive Portals Core (<code>imm_ptl_core</code>), the other is the Miscellaneous Utility Library from qouteall (<code>q_misc_util</code>).</p><p><code>q_misc_util</code> contains the dimension API and remote procedure call utility. <code>imm_ptl_core</code> contains the portal functionality.</p><p>The mod <code>imm_ptl_core</code> is incompatible with some mods, but <code>q_misc_util</code> is compatible with most mods and you can safely include <code>q_mist_util</code> if you only want to use the dimension API and remote procedure call API.</p><p>If you have any issue using the API, you can contact qouteall via <a href="https://discord.gg/BZxgURK" target="_blank" rel="noopener noreferrer">discord</a> or open a <a href="https://github.com/qouteall/ImmersivePortalsMod/discussions" target="_blank" rel="noopener noreferrer">discussion</a>.</p><p>Example: <a href="https://github.com/qouteall/MiniScaledMod" target="_blank" rel="noopener noreferrer">MiniScaled mod</a> uses ImmPtl API.</p><h2 id="the-miscellaneous-utility-api-q-misc-util" tabindex="-1"><a class="header-anchor" href="#the-miscellaneous-utility-api-q-misc-util" aria-hidden="true">#</a> The Miscellaneous Utility API (<code>q_misc_util</code>)</h2><h3 id="dimension-api" tabindex="-1"><a class="header-anchor" href="#dimension-api" aria-hidden="true">#</a> Dimension API</h3><h4 id="basic-concepts-of-dimensions" tabindex="-1"><a class="header-anchor" href="#basic-concepts-of-dimensions" aria-hidden="true">#</a> Basic Concepts of Dimensions</h4><p>Minecraft allows defining dimension types, biomes and other things via datapacks. Fabric will turn mod files in <code>resources</code> into virtual datapacks.</p><p>You can get a <code>DynamicRegistryManager</code> from a server, then you can get the dimension type registry from the registry manager, and then you can get the dimension type from the dimension type registry.</p><p>A dimension consists of:</p><ul><li>A dimension id (Its type is <code>RegistryKey&lt;World&gt;</code>. An <code>Identifier</code> can be converted to <code>RegistryKey&lt;World&gt;</code>)</li><li>A dimension type. It defines the world height, skylight and other properties. (You can define your dimension types in json files. Then you can get it from the <code>DynamicRegistryManager</code>)</li><li>A chunk generator. It does world generation of that dimension. To create the chunk generator, you probably need to access the registries to get the biomes and other things via <code>DynamicRegistryManager</code>.</li></ul><p>A <code>DimensionOptions</code> contains a dimension type <code>RegistryEntry</code> and a chunk generator.</p><p>In Mojang mapping, <code>DynamicRegistryManager</code> is <code>RegistryAccess</code>, <code>RegistryKey</code> is <code>ResourceKey</code>, <code>DimensionOptions</code> is <code>WorldStem</code>, <code>GeneratorOptions</code> is <code>WorldGenSettings</code>, <code>RegistryEntry</code> is <code>Holder</code>, <code>Identifier</code> is <code>ResourceLocation</code>.</p><h4 id="dynamically-adding-and-removing-dimensions" tabindex="-1"><a class="header-anchor" href="#dynamically-adding-and-removing-dimensions" aria-hidden="true">#</a> Dynamically Adding and Removing Dimensions</h4><p>The Dimension API supports dynamically adding and removing dimensions when the server is running. <strong>This feature is still experimental.</strong></p><p>Add a new dimension dynamically:</p><div class="language-java ext-java line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">DynamicRegistryManager</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">manager</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> MiscHelper.</span><span style="color:#DCBDFB;">getServer</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">getRegistryManager</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">// get the dimension type</span></span>
<span class="line"><span style="color:#ADBAC7;">RegistryEntry</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">DimensionType</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">dimensionType</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> manager.</span><span style="color:#DCBDFB;">getEntry</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">    RegistryKey.</span><span style="color:#DCBDFB;">of</span><span style="color:#ADBAC7;">(Registry.DIMENSION_TYPE_KEY, </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Identifier</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;namespace:dimension_type_id&quot;</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">).</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">// add the dimension</span></span>
<span class="line"><span style="color:#ADBAC7;">DimensionAPI.</span><span style="color:#DCBDFB;">addDimensionDynamically</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Identifier</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;namespace:new_dimension_id&quot;</span><span style="color:#ADBAC7;">),</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">DimensionOptions</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">        dimensionType,</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">CustomChunkGenerator</span><span style="color:#ADBAC7;">(...)</span></span>
<span class="line"><span style="color:#ADBAC7;">    )</span></span>
<span class="line"><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>That code will add the new dimension to the server world map and send dimension sync packets to client. You should not do this during server initialization.</p><p>When the server restarts, the dynamically added dimension will vanish. To make sure that dynamically added dimensions are still present when the server restarts, you need to save the dimension configuration:</p><div class="language-java ext-java line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">RegistryKey</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">World</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">dimId</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> RegistryKey.</span><span style="color:#DCBDFB;">of</span><span style="color:#ADBAC7;">(Registry.WORLD_KEY, </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Identifier</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;namespace:new_dimension_id&quot;</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">DimensionAPI.</span><span style="color:#DCBDFB;">saveDimensionConfiguration</span><span style="color:#ADBAC7;">(dimId);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Then it will save the configuration as a json file in the folder <code>q_dimension_configs</code> in the world saving.</p><p>Remove a dimension dynamically:</p><div class="language-java ext-java line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">RegistryKey</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">World</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">dimId</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> RegistryKey.</span><span style="color:#DCBDFB;">of</span><span style="color:#ADBAC7;">(Registry.WORLD_KEY, </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Identifier</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;namespace:new_dimension_id&quot;</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">ServerWorld</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">world</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> MiscHelper.</span><span style="color:#DCBDFB;">getServer</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">getWorld</span><span style="color:#ADBAC7;">(dimId);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">DimensionAPI.</span><span style="color:#DCBDFB;">removeDimensionDynamically</span><span style="color:#ADBAC7;">(world);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>That code will remove the dimension from the server world map and send sync packets to client. This will not delete the world saving (blocks, entities) of that dimension. If you re-add the dimension, the blocks and entities will still be there.</p><p>If you saved that dimension&#39;s configuration, you need to delete the configuration:</p><div class="language-java ext-java line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">DimensionAPI.</span><span style="color:#DCBDFB;">deleteDimensionConfiguration</span><span style="color:#ADBAC7;">(dimId);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="adding-dimensions-during-server-initialization" tabindex="-1"><a class="header-anchor" href="#adding-dimensions-during-server-initialization" aria-hidden="true">#</a> Adding Dimensions During Server Initialization</h4><p>The utility library supports another way of adding dimensions other than using JSON files:</p><ul><li>It does not require hardcoding things of your dimension. You can create the chunk generator at runtime. You can use configs to control whether to add the dimensions. It does not require hardcoding the seed.</li><li>It will not add your dimension into <code>level.dat</code> and cause issues after uninstalling the mod.</li><li>It will show the warning screen (&quot;worlds using experimental settings are not supported&quot;) when entering a world.</li></ul><p>ImmPtl&#39;s dimension API overcomes these obstacles. To use the dimension API, you need to keep the dimension type json and delete the dimension json. Then add the dimension in <code>DimensionAPI.serverDimensionsLoadEvent</code> using <code>DimensionAPI.addDimension</code>. (<code>DimensionAPI.addDimension</code> should not be used outside of the event.)</p><h5 id="in-1-18-2" tabindex="-1"><a class="header-anchor" href="#in-1-18-2" aria-hidden="true">#</a> In 1.18.2:</h5><div class="language-java ext-java line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">DimensionAPI.serverDimensionsLoadEvent.</span><span style="color:#DCBDFB;">register</span><span style="color:#ADBAC7;">((generatorOptions, registryManager) </span><span style="color:#F47067;">-&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    Registry</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">DimensionOptions</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">registry</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> generatorOptions.</span><span style="color:#DCBDFB;">getDimensions</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// get the dimension type</span></span>
<span class="line"><span style="color:#ADBAC7;">    RegistryEntry</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">DimensionType</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">dimType</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> registryManager.</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">(Registry.DIMENSION_TYPE_KEY).</span><span style="color:#DCBDFB;">getEntry</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">        RegistryKey.</span><span style="color:#DCBDFB;">of</span><span style="color:#ADBAC7;">(Registry.DIMENSION_TYPE_KEY, </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Identifier</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;namespace:dimension_type_id&quot;</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">    ).</span><span style="color:#DCBDFB;">orElseThrow</span><span style="color:#ADBAC7;">(() </span><span style="color:#F47067;">-&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">RuntimeException</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;Missing dimension type&quot;</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">    Identifier</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">dimId</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Identifier</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;namespace:dimension_id&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// get the biome registry for initializing the biome source</span></span>
<span class="line"><span style="color:#ADBAC7;">    Registry</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">Biome</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">biomeRegistry</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> registryManager.</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">(Registry.BIOME_KEY);</span></span>
<span class="line"><span style="color:#ADBAC7;">    BiomeSource</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">biomeSource</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">CustomBiomeSource</span><span style="color:#ADBAC7;">(seed, biomeRegistry);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// add the dimension</span></span>
<span class="line"><span style="color:#ADBAC7;">    DimensionAPI.</span><span style="color:#DCBDFB;">addDimension</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">        registry, dimId, dimType,</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">CustomChunkGenerator</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#ADBAC7;">    );</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// mark it non-persistent so it won&#39;t be saved into level.dat</span></span>
<span class="line"><span style="color:#ADBAC7;">    DimensionAPI.</span><span style="color:#DCBDFB;">markDimensionNonPersistent</span><span style="color:#ADBAC7;">(dimId);</span></span>
<span class="line"><span style="color:#ADBAC7;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>To remove the screen of &quot;worlds using experimental settings are not supported&quot;, you need to do mark the namespace stable.</p><p>For example, if your dimension is <code>aaa:bbb</code>, then do this during mod initialization:</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#adbac7;">LifecycleHack.markNamespaceStable(&quot;aaa&quot;);</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="in-1-17-1-and-1-18-1" tabindex="-1"><a class="header-anchor" href="#in-1-17-1-and-1-18-1" aria-hidden="true">#</a> In 1.17.1 and 1.18.1:</h5><div class="language-java ext-java line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#ADBAC7;">DimensionAPI.serverDimensionsLoadEvent.</span><span style="color:#DCBDFB;">register</span><span style="color:#ADBAC7;">((generatorOptions, registryManager) </span><span style="color:#F47067;">-&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    SimpleRegistry</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">DimensionOptions</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">registry</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> generatorOptions.</span><span style="color:#DCBDFB;">getDimensions</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">long</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">seed</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> generatorOptions.</span><span style="color:#DCBDFB;">getSeed</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// get the dimension type</span></span>
<span class="line"><span style="color:#ADBAC7;">    DimensionType</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">dimensionType</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> registryManager.</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">(Registry.DIMENSION_TYPE_KEY)</span></span>
<span class="line"><span style="color:#ADBAC7;">        .</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Identifier</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;namespace:dimension_type_id&quot;</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#ADBAC7;">    Validate.</span><span style="color:#DCBDFB;">notNull</span><span style="color:#ADBAC7;">(dimensionType);</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// get the biome registry for initializing the biome source</span></span>
<span class="line"><span style="color:#ADBAC7;">    MutableRegistry</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">Biome</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">biomeRegistry</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> registryManager.</span><span style="color:#DCBDFB;">get</span><span style="color:#ADBAC7;">(Registry.BIOME_KEY);</span></span>
<span class="line"><span style="color:#ADBAC7;">    BiomeSource</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">biomeSource</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">CustomBiomeSource</span><span style="color:#ADBAC7;">(seed, biomeRegistry);</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// directly register the dimension</span></span>
<span class="line"><span style="color:#ADBAC7;">    Identifier</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">dimensionId</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Identifier</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;namespace:dimension_id&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">    DimensionAPI.</span><span style="color:#DCBDFB;">addDimension</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">        seed, registry, dimensionId, () </span><span style="color:#F47067;">-&gt;</span><span style="color:#ADBAC7;"> dimensionType,</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">CustomChunkGenerator</span><span style="color:#ADBAC7;">(seed, biomeSource)</span></span>
<span class="line"><span style="color:#ADBAC7;">    );</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// mark it non-persistent so it won&#39;t be saved into level.dat</span></span>
<span class="line"><span style="color:#ADBAC7;">    DimensionAPI.</span><span style="color:#DCBDFB;">markDimensionNonPersistent</span><span style="color:#ADBAC7;">(dimensionId);</span></span>
<span class="line"><span style="color:#ADBAC7;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="networking-utility-remote-procedure-call" tabindex="-1"><a class="header-anchor" href="#networking-utility-remote-procedure-call" aria-hidden="true">#</a> Networking Utility (Remote Procedure Call)</h3><p>Fabric provides the networking API. But adding a new type of packet requires (1) Write packet serialization/deserialization code (2) Write the packet handling code, which requires sending the task to the client/server thread to execute it (3) Give it an identifier and register it. This networking utility makes it easier.</p><p>Example: if you want the server to send a packet to ask the client to invoke this method (on the render thread):</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#adbac7;">public class AAARemoteCallableBBB{</span></span>
<span class="line"><span style="color:#adbac7;">    public static void clientMethod(int arg1, double arg2) {...}</span></span>
<span class="line"><span style="color:#adbac7;">}</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Do this</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#adbac7;">McRemoteProcedureCall.tellClientToInvoke(</span></span>
<span class="line"><span style="color:#adbac7;">    player,</span></span>
<span class="line"><span style="color:#adbac7;">    &quot;path.to.the_class.AAARemoteCallableBBB.clientMethod&quot;,</span></span>
<span class="line"><span style="color:#adbac7;">    3, 4.5</span></span>
<span class="line"><span style="color:#adbac7;">);</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>If you want the client to send a packet to ask the server to invoke this method (on the server thread):</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#adbac7;">public class AAARemoteCallableBBB{</span></span>
<span class="line"><span style="color:#adbac7;">    public static void serverMethod(ServerPlayerEntity player, Block arg1) {...}</span></span>
<span class="line"><span style="color:#adbac7;">}</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Do this</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#adbac7;">McRemoteProcedureCall.tellServerToInvoke(</span></span>
<span class="line"><span style="color:#adbac7;">    &quot;path.to.the_class.AAARemoteCallableBBB.serverMethod&quot;,</span></span>
<span class="line"><span style="color:#adbac7;">    Blocks.STONE</span></span>
<span class="line"><span style="color:#adbac7;">);</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>For security concerns, the invoked method&#39;s class path must contain &quot;RemoteCallable&quot;. For example, the class name can be &quot;XXRemoteCallableYYY&quot; or &quot;RemoteCallables&quot;.</p><p>The supported argument types are</p><ul><li>The types that Gson can directly serialize/deserialize, including <code>int</code>, <code>double</code>, <code>boolean</code>, <code>long</code>, <code>String</code>, <code>int[]</code>, <code>Map&lt;String,String&gt;</code>, Enums, Plain old java objects</li><li><code>Identifier</code>, <code>RegistryKey&lt;World&gt;</code>, <code>RegistryKey&lt;Biome&gt;</code>, <code>BlockPos</code>, <code>Vec3d</code>, <code>UUID</code>, <code>Block</code>, <code>Item</code>, <code>BlockState</code>, <code>ItemStack</code>, <code>CompoundTag</code>, <code>Text</code></li></ul><p>Using unsupported argument types will cause serialization/deserialization issues.</p><h2 id="immersive-portals-api-imm-ptl-core" tabindex="-1"><a class="header-anchor" href="#immersive-portals-api-imm-ptl-core" aria-hidden="true">#</a> Immersive Portals API (<code>imm_ptl_core</code>)</h2><h3 id="create-a-portal" tabindex="-1"><a class="header-anchor" href="#create-a-portal" aria-hidden="true">#</a> Create a Portal</h3><p>Example:</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#adbac7;">Portal portal = Portal.entityType.create(serverWorld);</span></span>
<span class="line"><span style="color:#adbac7;">portal.setOriginPos(new Vec3d(0, 70, 0));</span></span>
<span class="line"><span style="color:#adbac7;">portal.setDestinationDimension(World.NETHER);</span></span>
<span class="line"><span style="color:#adbac7;">portal.setDestination(new Vec3d(100, 70, 100));</span></span>
<span class="line"><span style="color:#adbac7;">portal.setOrientationAndSize(</span></span>
<span class="line"><span style="color:#adbac7;">    new Vec3d(1, 0, 0), // axisW</span></span>
<span class="line"><span style="color:#adbac7;">    new Vec3d(0, 1, 0), // axisH</span></span>
<span class="line"><span style="color:#adbac7;">    4, // width</span></span>
<span class="line"><span style="color:#adbac7;">    4 // height</span></span>
<span class="line"><span style="color:#adbac7;">);</span></span>
<span class="line"><span style="color:#adbac7;">portal.world.spawnEntity(portal);</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>The portal can face any rotation, be anywhere, point to any position in any dimension.</p><p>It&#39;s recommended to check <a href="./Portal-Attributes">Portal Attributes</a> .</p><figure><img src="https://i.loli.net/2021/11/20/XbnLyzM2pWOEIwl.png" alt=""></figure><p><code>axisW</code> and <code>axisH</code> are unit vectors and should be perpendicular to each other. The portal orientation has nothing to do with pitch and yaw (because pitch and yaw cannot represent tilted rotations).</p><p>If the portal attribute gets changed on the server side after the portal has spawned, call <code>reloadAndSyncToClient</code> to sync the changes to client.</p><p>To create the reverse/flipped portal entity, use <code>PortalAPI.createReversePortal</code> <code>PortalAPI.createFlippedPortal</code> . <a href="./Portal-Customization#1-nether-portal--4-portal-entities">How bi-way portals and bi-faced portals are organized</a></p><h4 id="about-rotations-and-quaternions" tabindex="-1"><a class="header-anchor" href="#about-rotations-and-quaternions" aria-hidden="true">#</a> About Rotations and Quaternions</h4><p>You can set the portal&#39;s rotating transformation by <code>setRotationTransformation()</code> . The rotation transformation is represented using quaternion. There is a vanilla quaternion class <code>net.minecraft.util.math.Quaternion</code> and ImmPtl&#39;s quaternion class <code>DQuaternion</code>. The vanilla quaternion uses float and is mutable. <code>DQuaternion</code> uses double and is immutable.</p><p>A quaternion is a rotating transformation. For example you can create a rotation along Y axis for 45 degrees by <code>DQuaternion.rotateByDegrees(new Vec3d(0,1,0),45).toMcQuaternion()</code> .</p><p>About quaternions, you just need to know these:</p><ul><li>A quaternion can be seen as a unit 4D vector. If the 4D vector is not unit-length, it will not be a valid rotation.</li><li>Hamilton product combines two rotating transformations. <code>a.hamiltonProduct(b)</code> gives the rotation that firstly apply <code>b</code> and then <code>a</code> . The sequence matters.</li><li>Conjugate means getting the inverse rotation.</li><li>Having the 4 numbers negated does not change the corresponding rotation.</li><li>The quaternion can be interpolated on the 4D sphere surface.</li></ul><p>Quaternion can not only represent a rotating process, it can also represent an orientation. You can manipulate portal orientation by <code>PortalAPI.getPortalOrientationQuaternion</code> and <code>PortalAPI.setPortalOrientationQuaternion</code> .</p><p>ImmPtl does not use Euler angle for rotation because Euler angle requires handling many edge cases and is more complex.</p><h3 id="chunk-loading-api" tabindex="-1"><a class="header-anchor" href="#chunk-loading-api" aria-hidden="true">#</a> Chunk Loading API</h3><p>Vanilla has the force-load functionality but it only loads the chunk and does not synchronize the chunk to player client. This mod supports loading chunks and synchronize the chunk (blocks, entities, etc.) to the specific player.</p><p>Example:</p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#adbac7;">PortalAPI.addChunkLoaderForPlayer(</span></span>
<span class="line"><span style="color:#adbac7;">    serverPlayerEntity,</span></span>
<span class="line"><span style="color:#adbac7;">    new ChunkLoader(</span></span>
<span class="line"><span style="color:#adbac7;">        new DimensionalChunkPos(</span></span>
<span class="line"><span style="color:#adbac7;">            World.OVERWORLD,</span></span>
<span class="line"><span style="color:#adbac7;">            100, // chunk x</span></span>
<span class="line"><span style="color:#adbac7;">            100 // chunk z</span></span>
<span class="line"><span style="color:#adbac7;">        ),</span></span>
<span class="line"><span style="color:#adbac7;">        3 // radius in chunks</span></span>
<span class="line"><span style="color:#adbac7;">    )</span></span>
<span class="line"><span style="color:#adbac7;">);</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Call <code>removeChunkLoaderForPlayer</code> when you want to unload.</p><h3 id="access-multiple-client-worlds" tabindex="-1"><a class="header-anchor" href="#access-multiple-client-worlds" aria-hidden="true">#</a> Access Multiple Client Worlds</h3><p>This mod eliminates the limitation that only one dimension can be loaded on client at the same time. If you want to get the nether world, use <code>ClientWorldLoader.getWorld(World.NETHER)</code> . The client world will be created when it&#39;s used at the first time.</p><p>If the client experiences conventional dimension change (with loading screen) then all worlds will be unloaded and recreated later.</p><h3 id="gui-portal" tabindex="-1"><a class="header-anchor" href="#gui-portal" aria-hidden="true">#</a> GUI Portal</h3><p>Use <code> GuiPortalRendering.submitNextFrameRendering(worldRenderInfo, frameBuffer)</code> to ask it to render the world into the framebuffer in the next frame. The rendered dimension, position, camera transformation can be specified in the <code>WorldRenderInfo</code>.</p><p>That framebuffer will automatically be resized to be the same size as the game window.</p><p><a href="https://github.com/qouteall/ImmersivePortalsMod/blob/1.18/imm_ptl_core/src/main/java/qouteall/imm_ptl/core/api/example/ExampleGuiPortalRendering.java" target="_blank" rel="noopener noreferrer">Example</a></p><figure><img src="https://i.loli.net/2021/06/07/AKBYLdxikuEUR6o.png" alt=""></figure><h2 id="how-to-make-other-mod-s-portals-see-through" tabindex="-1"><a class="header-anchor" href="#how-to-make-other-mod-s-portals-see-through" aria-hidden="true">#</a> How to Make Other Mod&#39;s Portals See-through</h2><p>Immersive Portals&#39; datapack-custom-portal system allows converting a conventional portal (a portal that is similar to nether portal, for example the portal of Paradise Lost) to see-through when the player goes through the portal. That JSON file can be directly put into the mod jar. <a href="https://github.com/devs-immortal/Paradise-Lost/blob/1.18.2/src/main/resources/data/the_aether/custom_portal_generation/ip_aether_portal.json" target="_blank" rel="noopener noreferrer">Example in Paradise Lost mod</a>. If the mod author did not put the conversion generation file into the mod jar, you can also use your own datapack to add it.</p><p>It converts when after the player goes through portal once. The portal is not converted when lighting the portal because ImmPtl didn&#39;t know how to select the destination and generate the frame, until the player goes through the portal once.</p><h2 id="mod-structure" tabindex="-1"><a class="header-anchor" href="#mod-structure" aria-hidden="true">#</a> Mod Structure</h2><p>This mod (Fabric version)&#39;s mod id is <code>immersive_portals</code>. It has 3 mods jar-in-jar.</p><ul><li>Immersive Portals Core (modid:<code>imm_ptl_core</code>)</li><li>Miscellaneous Utility from qouteall (modid:<code>q_misc_util</code>)</li><li>Cloth Config (for config GUI)</li></ul><p>The Immersive Portals Core contains the core portal functionality:</p><ul><li>Recursive portal rendering</li><li>Client multi-world loading</li><li>Server-side remote chunk loading</li><li>Remote chunk/entity networking synchronization</li><li>Client dimension transition without loading screen and multi-dimensional position synchronization</li><li>Global portal management</li><li>Cross portal block interaction, cross portal sound</li><li>Cross portal entity rendering</li><li>Cross portal collision handling</li><li>Datapack-based custom portal generation (and general breakable portal)</li><li>GUI portal rendering</li><li>Integration with Pehkui, Sodium, Iris</li></ul><p>The Core registers portal entity types and portal placeholder block. The Core (hopefully) does not change existing vanilla behavior.</p><p>The mod <code>q_misc_util</code> has:</p><ul><li>Dimension API and Dynamic Dimension Management</li><li>Remote procedure call</li></ul><p>The mod Immersive Portals has:</p><ul><li>Enhanced nether portals</li><li>Enhanced end portal</li><li>Alternate dimensions</li><li>Dimension stack</li><li>Command stick</li><li>Portal helper</li></ul><h2 id="configure-dependency" tabindex="-1"><a class="header-anchor" href="#configure-dependency" aria-hidden="true">#</a> Configure Dependency</h2><p>In your <code>build.gradle</code>:</p><p>Add this into <code>repositories</code></p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#adbac7;">maven { url &#39;https://jitpack.io&#39; }</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Add this into <code>dependencies</code></p><div class="language-text ext-text line-numbers-mode"><pre class="shiki" style="background-color:#22272e;"><code><span class="line"><span style="color:#adbac7;">// Dependency of Immersive Portals Core:</span></span>
<span class="line"><span style="color:#adbac7;">modImplementation (&#39;com.github.qouteall.ImmersivePortalsMod:imm_ptl_core:v1.3.3-1.18&#39;){</span></span>
<span class="line"><span style="color:#adbac7;">	exclude(group: &quot;net.fabricmc.fabric-api&quot;)</span></span>
<span class="line"><span style="color:#adbac7;">	transitive(false)</span></span>
<span class="line"><span style="color:#adbac7;">}</span></span>
<span class="line"><span style="color:#adbac7;"></span></span>
<span class="line"><span style="color:#adbac7;">// Dependency of the Miscellaneous Utility Library from qouteall</span></span>
<span class="line"><span style="color:#adbac7;">modImplementation (&#39;com.github.qouteall.ImmersivePortalsMod:q_misc_util:v1.3.3-1.18&#39;){</span></span>
<span class="line"><span style="color:#adbac7;">	exclude(group: &quot;net.fabricmc.fabric-api&quot;)</span></span>
<span class="line"><span style="color:#adbac7;">	transitive(false)</span></span>
<span class="line"><span style="color:#adbac7;">}</span></span>
<span class="line"><span style="color:#adbac7;"></span></span>
<span class="line"><span style="color:#adbac7;">// If you want to make it jar-in-jar</span></span>
<span class="line"><span style="color:#adbac7;">include (&#39;com.github.qouteall.ImmersivePortalsMod:q_misc_util:v1.3.3-1.18&#39;)</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>You should change the version <code>v1.3.3-1.18</code> to the latest version. See https://jitpack.io/#qouteall/ImmersivePortalsMod</p><p>JitPack will build it when you firstly use it. If you encounter <code>Read time out</code>, it means that JitPack haven&#39;t finished building it yet, simply try again.</p>`,106);function o(l,t){return a}var p=s(e,[["render",o],["__file","API-for-Other-Mods.html.vue"]]);export{p as default};
